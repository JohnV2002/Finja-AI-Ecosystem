name: Docker Security Scan & Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # --- 1. Snyk Security Scan fÃ¼r alle 3 Projekte ---
  snyk-scan:
    runs-on: ubuntu-latest
    name: Snyk Container Scan (Memory, OCR, Crawler)
    steps:
      - uses: actions/checkout@v4

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      - name: Scan Finja-Memory
        working-directory: ./finja-Memory
        run: snyk container test --file=Dockerfile --severity-threshold=high

      - name: Scan Finja-OCR
        working-directory: ./finja-ocr
        run: snyk container test --file=Dockerfile --severity-threshold=high

      - name: Scan Finja-Web-Crawler
        working-directory: ./finja-web-crawler
        run: snyk container test --file=Dockerfile --severity-threshold=high

    # --- 2. Docker Build (lÃ¤uft NUR, wenn Snyk-Schritt erfolgreich war) ---
  docker-build:
    needs: snyk-scan  # ðŸ‘ˆ WICHTIG: LÃ¤uft nur, wenn snyk-scan erfolgreich war!
    runs-on: ubuntu-latest
    name: Build Docker Images
    steps:
      - uses: actions/checkout@v4

      - name: Build Finja-Memory Image
        working-directory: ./finja-Memory
        run: |
          docker build . --file Dockerfile --tag finja-memory:latest
          echo "âœ… Finja-Memory image built successfully"

      - name: Build Finja-OCR Image
        working-directory: ./finja-ocr
        run: |
          docker build . --file Dockerfile --tag finja-ocr:latest
          echo "âœ… Finja-OCR image built successfully"

      - name: Build Finja-Web-Crawler Image
        working-directory: ./finja-web-crawler
        run: |
          docker build . --file Dockerfile --tag finja-web-crawler:latest
          echo "âœ… Finja-Web-Crawler image built successfully"

      - name: List built images
        run: docker images
