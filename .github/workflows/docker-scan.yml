name: Docker Security Scan & Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Definiere alle Services nur EINMAL in einer Matrix
  scan-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false # Lässt andere Jobs weiterlaufen, auch wenn einer fehlschlägt
      matrix:
        service:
          - name: Memory
            path: finja-Open-Web-UI/finja-Memory
            tag: finja-memory
          - name: OCR
            path: finja-Open-Web-UI/finja-ocr
            tag: finja-ocr
          - name: Web-Crawler
            path: finja-Open-Web-UI/finja-web-crawler
            tag: finja-web-crawler

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # --- 1. Snyk Security Scan ---
      - name: Install Snyk and Authenticate
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          npm install -g snyk
          snyk auth $SNYK_TOKEN
      
      - name: Run Snyk Scan for ${{ matrix.service.name }}
        working-directory: ./${{ matrix.service.path }}
        run: snyk container test --file=Dockerfile --severity-threshold=high

      # --- 2. Docker Build ---
      - name: Build image for ${{ matrix.service.name }}
        working-directory: ./${{ matrix.service.path }}
        run: docker build . --file Dockerfile --tag ${{ matrix.service.tag }}:latest
      
      - name: Print success message for ${{ matrix.service.name }}
        run: echo "✅ ${{ matrix.service.tag }}:latest image built successfully"

  # Optionaler Job am Ende, um alle gebauten Images aufzulisten
  list-images:
    runs-on: ubuntu-latest
    needs: scan-and-build # Läuft nur, wenn ALLE Builds erfolgreich waren
    steps:
      - name: List all Docker images (Just for verification)
        # In this separate job, the images are not available unless you push them to a registry.
        # This step is more illustrative to show the structure.
        run: echo "Alle Service-Images wurden erfolgreich gebaut."
